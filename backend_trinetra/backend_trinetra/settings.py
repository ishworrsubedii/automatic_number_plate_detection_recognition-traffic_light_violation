"""
Django settings for backend_trinetra project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-yhu+w3-4ffor0ttx$5@xip1n_q=c^+u^n_s$s(#wg64dv+acjz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'djoser',
    'accounts',
    'alpr',
    'trafficlight',
    'channels',

]
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'backend_trinetra.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, '../frontend-trinetra/build')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],

        },

    },
]

WSGI_APPLICATION = 'backend_trinetra.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases


EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_HOST_USER = "your-email@gmail.com"
EMAIL_HOST_PASSWORD = "YOUR-EMAIL-HOST-PASSWORD"
EMAIL_USE_TLS = True

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'trinetra',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '',
    },
    # ALPR DATABASES
    'image_capture_db': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'image_capture',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'image_load_db': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'image_load',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'alpr_db': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'alpr',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'alpr_recognition_db': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'alpr_recognition',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    "alpr_recognized_image_db": {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'alpr_recognized_images_path_information',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    "alpr_non_recognized_image_db": {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'alpr_non_recognized_images_path_information',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    # TRAFFIC LIGHT DATABASES
    "traffic_light_image_capture_db": {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'traffic_light_image_capture_status',
        'USER ': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    "traffic_light_color_detection_db": {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'traffic_light_color_detection_status',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    "traffic_light_vehicle_detection_status_db": {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'traffic_light_vehicle_detection_status',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    "traffic_light_number_plate_detection_status_db": {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'traffic_light_number_plate_detection_status',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    "traffic_light_number_plate_recognition_status_db": {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'traffic_light_number_plate_recognition_status',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    },

    "traffic_light_red_light_violated_vehicles_list_db": {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'traffic_light_red_light_violated_vehicles_list',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    },

    "traffic_light_vehicle_not_detected_image_list_db": {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'traffic_light_vehicle_not_detected_image_list ',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    "traffic_light_alpr_recognition_result_db": {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'traffic_light_alpr_recognition_result',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',

    },
    "traffic_light_alpr_recognized_image_db": {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'traffic_light_alpr_recognized_images_path_information',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',

    },
    "traffic_light_alpr_non_recognized_image_db": {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'traffic_light_alpr_non_recognized_images_path_information',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    "traffic_light_deleted_images_db": {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'traffic_light_deleted_images',
        'USER': 'trinetrauser',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '5432',
    }

}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

AUTH_USER_MODEL = 'accounts.UserAccount'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, '../frontend-trinetra/build/static'),
    BASE_DIR
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('JWT',),
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=99999999),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),

}
DJOSER = {
    'LOGIN_FIELD': 'email',
    'USER_CREATE_PASSWORD_RETYPE': True,
    'USERNAME_CHANGED_EMAIL_CONFIRMATION': True,
    'PASSWORD_CHANGED_EMAIL_CONFIRMATION': True,
    'SEND_CONFIRMATION_EMAIL': True,
    'SET_USERNAME_RETYPE': True,
    'SET_PASSWORD_RETYPE': True,
    'PASSWORD_RESET_CONFIRM_URL': 'password/reset/confirm/{uid}/{token}',
    'USERNAME_RESET_CONFIRM_URL': 'email/reset/confirm/{uid}/{token}',
    'ACTIVATION_URL': 'activate/{uid}/{token}',
    'SEND_ACTIVATION_EMAIL': True,
    'SOCIAL_AUTH_TOKEN_STRATEGY': 'djoser.social.token.jwt.TokenStrategy',
    'SOCIAL_AUTH_ALLOWED_REDIRECT_URIS': ['http://localhost:8000/google', 'http://localhost:8000/facebook'],
    'SERIALIZERS': {
        'user_create': 'accounts.serializers.UserCreateSerializer',
        'user': 'accounts.serializers.UserCreateSerializer',
        'current_user': 'accounts.serializers.UserCreateSerializer',
        'user_delete': 'djoser.serializers.UserDeleteSerializer',
    },

    'LOGOUT_ON_PASSWOR D_CHANGE': True,

}
CSRF_TRUSTED_ORIGINS = ['http://localhost:3000', 'http://127.0.0.1:8000']
CORS_ALLOW_CREDENTIALS = True
